import java.text.DecimalFormat

apply plugin: 'war'

war 
{
  archiveName = findProperty('buildfile')
}

repositories 
{
    mavenCentral()
    jcenter()
}

dependencies 
{
  compile group: 'log4j', name: 'log4j', version: '1.2.17'
  compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

}

task addversion doLast{
  
  Properties props = new Properties()
  File propsFile = new File('gradle.properties')
  props.load(propsFile.newDataInputStream())
  String version = (props.getProperty('version')) as String
  File buildFile = new File('build/resources/main/greeting.txt')
  buildFile.append(System.getProperty("line.separator") + '---' + System.getProperty("line.separator") + 'Build '+ version)

}

task increment << 
{
  DecimalFormat df = new DecimalFormat("0000")
  Properties props = new Properties()
  File propsFile = new File('gradle.properties')
  props.load(propsFile.newDataInputStream())
  String version = (props.getProperty('version')) as String
  String minor = version.substring(version.lastIndexOf('.')+1)
  BigDecimal newbuild = (minor as BigDecimal)+1
  if (newbuild > 9999) {
    throw new GradleException('Minor build version is greater than 9999. Please correct version number in gradle.properties file')
  }
  minor=df.format(newbuild)
  version = version.take(version.length()-4)+ minor  
  props.setProperty('version', version)
  props.store(propsFile.newWriter(), null)
  props.load(propsFile.newDataInputStream())
}


addversion.dependsOn processResources
classes.dependsOn addversion
